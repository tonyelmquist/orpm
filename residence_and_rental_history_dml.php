<?php

// Data functions (insert, update, delete, form) for table residence_and_rental_history

// This script and data application were generated by AppGini 5.51
// Download AppGini for free from http://bigprof.com/appgini/download/

function residence_and_rental_history_insert(){
	global $Translation;

	// mm: can member insert record?
	$arrPerm=getTablePermissions('residence_and_rental_history');
	if(!$arrPerm[1]){
		return false;
	}

	$data['month'] = intval($_REQUEST['monthYear']) . '-' . intval($_REQUEST['monthMonth']) . '-' . intval($_REQUEST['monthDay']);
	$data['month'] = parseMySQLDate($data['month'], '1');
	$data['unit'] = makeSafe($_REQUEST['unit']);
		if($data['unit'] == empty_lookup_value){ $data['unit'] = ''; }
	$data['monthly_rent'] = makeSafe($_REQUEST['monthly_rent']);
		if($data['monthly_rent'] == empty_lookup_value){ $data['monthly_rent'] = ''; }
	$data['security_deposit'] = makeSafe($_REQUEST['security_deposit']);
		if($data['security_deposit'] == empty_lookup_value){ $data['security_deposit'] = ''; }
	$data['other_charges'] = makeSafe($_REQUEST['other_charges']);
		if($data['other_charges'] == empty_lookup_value){ $data['other_charges'] = ''; }
	$data['rent_paid'] = makeSafe($_REQUEST['rent_paid']);
		if($data['rent_paid'] == empty_lookup_value){ $data['rent_paid'] = ''; }
	$data['rent_balance'] = makeSafe($_REQUEST['rent_balance']);
		if($data['rent_balance'] == empty_lookup_value){ $data['rent_balance'] = ''; }
	$data['due_date'] = intval($_REQUEST['due_dateYear']) . '-' . intval($_REQUEST['due_dateMonth']) . '-' . intval($_REQUEST['due_dateDay']);
	$data['due_date'] = parseMySQLDate($data['due_date'], '');
	$data['rent_reminder'] = intval($_REQUEST['rent_reminderYear']) . '-' . intval($_REQUEST['rent_reminderMonth']) . '-' . intval($_REQUEST['rent_reminderDay']);
	$data['rent_reminder'] = parseMySQLDate($data['rent_reminder'], '1');
	$data['late_rent_reminder'] = intval($_REQUEST['late_rent_reminderYear']) . '-' . intval($_REQUEST['late_rent_reminderMonth']) . '-' . intval($_REQUEST['late_rent_reminderDay']);
	$data['late_rent_reminder'] = parseMySQLDate($data['late_rent_reminder'], '');
	$data['status'] = makeSafe($_REQUEST['status']);
		if($data['status'] == empty_lookup_value){ $data['status'] = ''; }
	$data['duration_of_residency_from'] = intval($_REQUEST['duration_of_residency_fromYear']) . '-' . intval($_REQUEST['duration_of_residency_fromMonth']) . '-' . intval($_REQUEST['duration_of_residency_fromDay']);
	$data['duration_of_residency_from'] = parseMySQLDate($data['duration_of_residency_from'], '');
	$data['to'] = intval($_REQUEST['toYear']) . '-' . intval($_REQUEST['toMonth']) . '-' . intval($_REQUEST['toDay']);
	$data['to'] = parseMySQLDate($data['to'], '');
	$data['reason_for_leaving'] = makeSafe($_REQUEST['reason_for_leaving']);
		if($data['reason_for_leaving'] == empty_lookup_value){ $data['reason_for_leaving'] = ''; }
	$data['notes'] = makeSafe($_REQUEST['notes']);
		if($data['notes'] == empty_lookup_value){ $data['notes'] = ''; }
	if($data['rent_paid'] == '') $data['rent_paid'] = "0.00";
	if($data['status'] == '') $data['status'] = "BALANCE";

	// hook: residence_and_rental_history_before_insert
	if(function_exists('residence_and_rental_history_before_insert')){
		$args=array();
		if(!residence_and_rental_history_before_insert($data, getMemberInfo(), $args)){ return false; }
	}

	$o = array('silentErrors' => true);
	sql('insert into `residence_and_rental_history` set       `month`=' . (($data['month'] !== '' && $data['month'] !== NULL) ? "'{$data['month']}'" : 'NULL') . ', `unit`=' . (($data['unit'] !== '' && $data['unit'] !== NULL) ? "'{$data['unit']}'" : 'NULL') . ', `monthly_rent`=' . (($data['monthly_rent'] !== '' && $data['monthly_rent'] !== NULL) ? "'{$data['monthly_rent']}'" : 'NULL') . ', `security_deposit`=' . (($data['security_deposit'] !== '' && $data['security_deposit'] !== NULL) ? "'{$data['security_deposit']}'" : 'NULL') . ', `other_charges`=' . (($data['other_charges'] !== '' && $data['other_charges'] !== NULL) ? "'{$data['other_charges']}'" : 'NULL') . ', `rent_paid`=' . (($data['rent_paid'] !== '' && $data['rent_paid'] !== NULL) ? "'{$data['rent_paid']}'" : 'NULL') . ', `rent_balance`=' . (($data['rent_balance'] !== '' && $data['rent_balance'] !== NULL) ? "'{$data['rent_balance']}'" : 'NULL') . ', `due_date`=' . (($data['due_date'] !== '' && $data['due_date'] !== NULL) ? "'{$data['due_date']}'" : 'NULL') . ', `rent_reminder`=' . (($data['rent_reminder'] !== '' && $data['rent_reminder'] !== NULL) ? "'{$data['rent_reminder']}'" : 'NULL') . ', `late_rent_reminder`=' . (($data['late_rent_reminder'] !== '' && $data['late_rent_reminder'] !== NULL) ? "'{$data['late_rent_reminder']}'" : 'NULL') . ', `status`=' . (($data['status'] !== '' && $data['status'] !== NULL) ? "'{$data['status']}'" : 'NULL') . ', `duration_of_residency_from`=' . (($data['duration_of_residency_from'] !== '' && $data['duration_of_residency_from'] !== NULL) ? "'{$data['duration_of_residency_from']}'" : 'NULL') . ', `to`=' . (($data['to'] !== '' && $data['to'] !== NULL) ? "'{$data['to']}'" : 'NULL') . ', `reason_for_leaving`=' . (($data['reason_for_leaving'] !== '' && $data['reason_for_leaving'] !== NULL) ? "'{$data['reason_for_leaving']}'" : 'NULL') . ', `notes`=' . (($data['notes'] !== '' && $data['notes'] !== NULL) ? "'{$data['notes']}'" : 'NULL'), $o);
	if($o['error']!=''){
		echo $o['error'];
		echo "<a href=\"residence_and_rental_history_view.php?addNew_x=1\">{$Translation['< back']}</a>";
		exit;
	}

	$recID = db_insert_id(db_link());

	// automatic tenant
	if($_REQUEST['filterer_tenant']){
		sql("update `residence_and_rental_history` set `tenant`='" . makeSafe($_REQUEST['filterer_tenant']) . "' where `id`='" . makeSafe($recID, false) . "'", $eo);
	}

	// hook: residence_and_rental_history_after_insert
	if(function_exists('residence_and_rental_history_after_insert')){
		$res = sql("select * from `residence_and_rental_history` where `id`='" . makeSafe($recID, false) . "' limit 1", $eo);
		if($row = db_fetch_assoc($res)){
			$data = array_map('makeSafe', $row);
		}
		$data['selectedID'] = makeSafe($recID, false);
		$args=array();
		if(!residence_and_rental_history_after_insert($data, getMemberInfo(), $args)){ return $recID; }
	}

	// mm: save ownership data
	sql("insert ignore into membership_userrecords set tableName='residence_and_rental_history', pkValue='" . makeSafe($recID, false) . "', memberID='" . makeSafe(getLoggedMemberID(), false) . "', dateAdded='" . time() . "', dateUpdated='" . time() . "', groupID='" . getLoggedGroupID() . "'", $eo);

	return $recID;
}

function residence_and_rental_history_delete($selected_id, $AllowDeleteOfParents=false, $skipChecks=false){
	// insure referential integrity ...
	global $Translation;
	$selected_id=makeSafe($selected_id);

	// mm: can member delete record?
	$arrPerm=getTablePermissions('residence_and_rental_history');
	$ownerGroupID=sqlValue("select groupID from membership_userrecords where tableName='residence_and_rental_history' and pkValue='$selected_id'");
	$ownerMemberID=sqlValue("select lcase(memberID) from membership_userrecords where tableName='residence_and_rental_history' and pkValue='$selected_id'");
	if(($arrPerm[4]==1 && $ownerMemberID==getLoggedMemberID()) || ($arrPerm[4]==2 && $ownerGroupID==getLoggedGroupID()) || $arrPerm[4]==3){ // allow delete?
		// delete allowed, so continue ...
	}else{
		return $Translation['You don\'t have enough permissions to delete this record'];
	}

	// hook: residence_and_rental_history_before_delete
	if(function_exists('residence_and_rental_history_before_delete')){
		$args=array();
		if(!residence_and_rental_history_before_delete($selected_id, $skipChecks, getMemberInfo(), $args))
			return $Translation['Couldn\'t delete this record'];
	}

	sql("delete from `residence_and_rental_history` where `id`='$selected_id'", $eo);

	// hook: residence_and_rental_history_after_delete
	if(function_exists('residence_and_rental_history_after_delete')){
		$args=array();
		residence_and_rental_history_after_delete($selected_id, getMemberInfo(), $args);
	}

	// mm: delete ownership data
	sql("delete from membership_userrecords where tableName='residence_and_rental_history' and pkValue='$selected_id'", $eo);
}

function residence_and_rental_history_update($selected_id){
	global $Translation;

	// mm: can member edit record?
	$arrPerm=getTablePermissions('residence_and_rental_history');
	$ownerGroupID=sqlValue("select groupID from membership_userrecords where tableName='residence_and_rental_history' and pkValue='".makeSafe($selected_id)."'");
	$ownerMemberID=sqlValue("select lcase(memberID) from membership_userrecords where tableName='residence_and_rental_history' and pkValue='".makeSafe($selected_id)."'");
	if(($arrPerm[3]==1 && $ownerMemberID==getLoggedMemberID()) || ($arrPerm[3]==2 && $ownerGroupID==getLoggedGroupID()) || $arrPerm[3]==3){ // allow update?
		// update allowed, so continue ...
	}else{
		return false;
	}

	$data['month'] = intval($_REQUEST['monthYear']) . '-' . intval($_REQUEST['monthMonth']) . '-' . intval($_REQUEST['monthDay']);
	$data['month'] = parseMySQLDate($data['month'], '1');
	$data['unit'] = makeSafe($_REQUEST['unit']);
		if($data['unit'] == empty_lookup_value){ $data['unit'] = ''; }
	$data['monthly_rent'] = makeSafe($_REQUEST['monthly_rent']);
		if($data['monthly_rent'] == empty_lookup_value){ $data['monthly_rent'] = ''; }
	$data['security_deposit'] = makeSafe($_REQUEST['security_deposit']);
		if($data['security_deposit'] == empty_lookup_value){ $data['security_deposit'] = ''; }
	$data['other_charges'] = makeSafe($_REQUEST['other_charges']);
		if($data['other_charges'] == empty_lookup_value){ $data['other_charges'] = ''; }
	$data['rent_paid'] = makeSafe($_REQUEST['rent_paid']);
		if($data['rent_paid'] == empty_lookup_value){ $data['rent_paid'] = ''; }
	$data['rent_balance'] = makeSafe($_REQUEST['rent_balance']);
		if($data['rent_balance'] == empty_lookup_value){ $data['rent_balance'] = ''; }
	$data['due_date'] = intval($_REQUEST['due_dateYear']) . '-' . intval($_REQUEST['due_dateMonth']) . '-' . intval($_REQUEST['due_dateDay']);
	$data['due_date'] = parseMySQLDate($data['due_date'], '');
	$data['rent_reminder'] = intval($_REQUEST['rent_reminderYear']) . '-' . intval($_REQUEST['rent_reminderMonth']) . '-' . intval($_REQUEST['rent_reminderDay']);
	$data['rent_reminder'] = parseMySQLDate($data['rent_reminder'], '1');
	$data['late_rent_reminder'] = intval($_REQUEST['late_rent_reminderYear']) . '-' . intval($_REQUEST['late_rent_reminderMonth']) . '-' . intval($_REQUEST['late_rent_reminderDay']);
	$data['late_rent_reminder'] = parseMySQLDate($data['late_rent_reminder'], '');
	$data['status'] = makeSafe($_REQUEST['status']);
		if($data['status'] == empty_lookup_value){ $data['status'] = ''; }
	$data['duration_of_residency_from'] = intval($_REQUEST['duration_of_residency_fromYear']) . '-' . intval($_REQUEST['duration_of_residency_fromMonth']) . '-' . intval($_REQUEST['duration_of_residency_fromDay']);
	$data['duration_of_residency_from'] = parseMySQLDate($data['duration_of_residency_from'], '');
	$data['to'] = intval($_REQUEST['toYear']) . '-' . intval($_REQUEST['toMonth']) . '-' . intval($_REQUEST['toDay']);
	$data['to'] = parseMySQLDate($data['to'], '');
	$data['reason_for_leaving'] = makeSafe($_REQUEST['reason_for_leaving']);
		if($data['reason_for_leaving'] == empty_lookup_value){ $data['reason_for_leaving'] = ''; }
	$data['notes'] = makeSafe($_REQUEST['notes']);
		if($data['notes'] == empty_lookup_value){ $data['notes'] = ''; }
	$data['selectedID']=makeSafe($selected_id);

	// hook: residence_and_rental_history_before_update
	if(function_exists('residence_and_rental_history_before_update')){
		$args=array();
		if(!residence_and_rental_history_before_update($data, getMemberInfo(), $args)){ return false; }
	}

	$o=array('silentErrors' => true);
	sql('update `residence_and_rental_history` set       `month`=' . (($data['month'] !== '' && $data['month'] !== NULL) ? "'{$data['month']}'" : 'NULL') . ', `unit`=' . (($data['unit'] !== '' && $data['unit'] !== NULL) ? "'{$data['unit']}'" : 'NULL') . ', `monthly_rent`=' . (($data['monthly_rent'] !== '' && $data['monthly_rent'] !== NULL) ? "'{$data['monthly_rent']}'" : 'NULL') . ', `security_deposit`=' . (($data['security_deposit'] !== '' && $data['security_deposit'] !== NULL) ? "'{$data['security_deposit']}'" : 'NULL') . ', `other_charges`=' . (($data['other_charges'] !== '' && $data['other_charges'] !== NULL) ? "'{$data['other_charges']}'" : 'NULL') . ', `rent_paid`=' . (($data['rent_paid'] !== '' && $data['rent_paid'] !== NULL) ? "'{$data['rent_paid']}'" : 'NULL') . ', `rent_balance`=' . (($data['rent_balance'] !== '' && $data['rent_balance'] !== NULL) ? "'{$data['rent_balance']}'" : 'NULL') . ', `due_date`=' . (($data['due_date'] !== '' && $data['due_date'] !== NULL) ? "'{$data['due_date']}'" : 'NULL') . ', `rent_reminder`=' . (($data['rent_reminder'] !== '' && $data['rent_reminder'] !== NULL) ? "'{$data['rent_reminder']}'" : 'NULL') . ', `late_rent_reminder`=' . (($data['late_rent_reminder'] !== '' && $data['late_rent_reminder'] !== NULL) ? "'{$data['late_rent_reminder']}'" : 'NULL') . ', `status`=' . (($data['status'] !== '' && $data['status'] !== NULL) ? "'{$data['status']}'" : 'NULL') . ', `duration_of_residency_from`=' . (($data['duration_of_residency_from'] !== '' && $data['duration_of_residency_from'] !== NULL) ? "'{$data['duration_of_residency_from']}'" : 'NULL') . ', `to`=' . (($data['to'] !== '' && $data['to'] !== NULL) ? "'{$data['to']}'" : 'NULL') . ', `reason_for_leaving`=' . (($data['reason_for_leaving'] !== '' && $data['reason_for_leaving'] !== NULL) ? "'{$data['reason_for_leaving']}'" : 'NULL') . ', `notes`=' . (($data['notes'] !== '' && $data['notes'] !== NULL) ? "'{$data['notes']}'" : 'NULL') . " where `id`='".makeSafe($selected_id)."'", $o);
	if($o['error']!=''){
		echo $o['error'];
		echo '<a href="residence_and_rental_history_view.php?SelectedID='.urlencode($selected_id)."\">{$Translation['< back']}</a>";
		exit;
	}


	// hook: residence_and_rental_history_after_update
	if(function_exists('residence_and_rental_history_after_update')){
		$res = sql("SELECT * FROM `residence_and_rental_history` WHERE `id`='{$data['selectedID']}' LIMIT 1", $eo);
		if($row = db_fetch_assoc($res)){
			$data = array_map('makeSafe', $row);
		}
		$data['selectedID'] = $data['id'];
		$args = array();
		if(!residence_and_rental_history_after_update($data, getMemberInfo(), $args)){ return; }
	}

	// mm: update ownership data
	sql("update membership_userrecords set dateUpdated='".time()."' where tableName='residence_and_rental_history' and pkValue='".makeSafe($selected_id)."'", $eo);

}

function residence_and_rental_history_form($selected_id = '', $AllowUpdate = 1, $AllowInsert = 1, $AllowDelete = 1, $ShowCancel = 0){
	// function to return an editable form for a table records
	// and fill it with data of record whose ID is $selected_id. If $selected_id
	// is empty, an empty form is shown, with only an 'Add New'
	// button displayed.

	global $Translation;

	// mm: get table permissions
	$arrPerm=getTablePermissions('residence_and_rental_history');
	if(!$arrPerm[1] && $selected_id==''){ return ''; }
	$AllowInsert = ($arrPerm[1] ? true : false);
	// print preview?
	$dvprint = false;
	if($selected_id && $_REQUEST['dvprint_x'] != ''){
		$dvprint = true;
	}

	$filterer_tenant = thisOr(undo_magic_quotes($_REQUEST['filterer_tenant']), '');

	// populate filterers, starting from children to grand-parents

	// unique random identifier
	$rnd1 = ($dvprint ? rand(1000000, 9999999) : '');
	// combobox: tenant
	$combo_tenant = new DataCombo;
	// combobox: month
	$combo_month = new DateCombo;
	$combo_month->DateFormat = "mdy";
	$combo_month->MinYear = 1900;
	$combo_month->MaxYear = 2100;
	$combo_month->DefaultDate = parseMySQLDate('1', '1');
	$combo_month->MonthNames = $Translation['month names'];
	$combo_month->NamePrefix = 'month';
	// combobox: due_date
	$combo_due_date = new DateCombo;
	$combo_due_date->DateFormat = "mdy";
	$combo_due_date->MinYear = 1900;
	$combo_due_date->MaxYear = 2100;
	$combo_due_date->DefaultDate = parseMySQLDate('', '');
	$combo_due_date->MonthNames = $Translation['month names'];
	$combo_due_date->NamePrefix = 'due_date';
	// combobox: rent_reminder
	$combo_rent_reminder = new DateCombo;
	$combo_rent_reminder->DateFormat = "mdy";
	$combo_rent_reminder->MinYear = 1900;
	$combo_rent_reminder->MaxYear = 2100;
	$combo_rent_reminder->DefaultDate = parseMySQLDate('1', '1');
	$combo_rent_reminder->MonthNames = $Translation['month names'];
	$combo_rent_reminder->NamePrefix = 'rent_reminder';
	// combobox: late_rent_reminder
	$combo_late_rent_reminder = new DateCombo;
	$combo_late_rent_reminder->DateFormat = "mdy";
	$combo_late_rent_reminder->MinYear = 1900;
	$combo_late_rent_reminder->MaxYear = 2100;
	$combo_late_rent_reminder->DefaultDate = parseMySQLDate('', '');
	$combo_late_rent_reminder->MonthNames = $Translation['month names'];
	$combo_late_rent_reminder->NamePrefix = 'late_rent_reminder';
	// combobox: duration_of_residency_from
	$combo_duration_of_residency_from = new DateCombo;
	$combo_duration_of_residency_from->DateFormat = "mdy";
	$combo_duration_of_residency_from->MinYear = 1900;
	$combo_duration_of_residency_from->MaxYear = 2100;
	$combo_duration_of_residency_from->DefaultDate = parseMySQLDate('', '');
	$combo_duration_of_residency_from->MonthNames = $Translation['month names'];
	$combo_duration_of_residency_from->NamePrefix = 'duration_of_residency_from';
	// combobox: to
	$combo_to = new DateCombo;
	$combo_to->DateFormat = "mdy";
	$combo_to->MinYear = 1900;
	$combo_to->MaxYear = 2100;
	$combo_to->DefaultDate = parseMySQLDate('', '');
	$combo_to->MonthNames = $Translation['month names'];
	$combo_to->NamePrefix = 'to';

	if($selected_id){
		// mm: check member permissions
		if(!$arrPerm[2]){
			return "";
		}
		// mm: who is the owner?
		$ownerGroupID=sqlValue("select groupID from membership_userrecords where tableName='residence_and_rental_history' and pkValue='".makeSafe($selected_id)."'");
		$ownerMemberID=sqlValue("select lcase(memberID) from membership_userrecords where tableName='residence_and_rental_history' and pkValue='".makeSafe($selected_id)."'");
		if($arrPerm[2]==1 && getLoggedMemberID()!=$ownerMemberID){
			return "";
		}
		if($arrPerm[2]==2 && getLoggedGroupID()!=$ownerGroupID){
			return "";
		}

		// can edit?
		if(($arrPerm[3]==1 && $ownerMemberID==getLoggedMemberID()) || ($arrPerm[3]==2 && $ownerGroupID==getLoggedGroupID()) || $arrPerm[3]==3){
			$AllowUpdate=1;
		}else{
			$AllowUpdate=0;
		}

		$res = sql("select * from `residence_and_rental_history` where `id`='".makeSafe($selected_id)."'", $eo);
		if(!($row = db_fetch_array($res))){
			return error_message($Translation['No records found']);
		}
		$urow = $row; /* unsanitized data */
		$hc = new CI_Input();
		$row = $hc->xss_clean($row); /* sanitize data */
		$combo_tenant->SelectedData = $row['tenant'];
		$combo_month->DefaultDate = $row['month'];
		$combo_due_date->DefaultDate = $row['due_date'];
		$combo_rent_reminder->DefaultDate = $row['rent_reminder'];
		$combo_late_rent_reminder->DefaultDate = $row['late_rent_reminder'];
		$combo_duration_of_residency_from->DefaultDate = $row['duration_of_residency_from'];
		$combo_to->DefaultDate = $row['to'];
	}else{
		$combo_tenant->SelectedData = $filterer_tenant;
	}
	$combo_tenant->HTML = '<span id="tenant-container' . $rnd1 . '"></span><input type="hidden" name="tenant" id="tenant' . $rnd1 . '" value="' . html_attr($combo_tenant->SelectedData) . '">';
	$combo_tenant->MatchText = '<span id="tenant-container-readonly' . $rnd1 . '"></span><input type="hidden" name="tenant" id="tenant' . $rnd1 . '" value="' . html_attr($combo_tenant->SelectedData) . '">';

	ob_start();
	?>

	<script>
		// initial lookup values
		var current_tenant__RAND__ = { text: "", value: "<?php echo addslashes($selected_id ? $urow['tenant'] : $filterer_tenant); ?>"};

		jQuery(function() {
			if(typeof(tenant_reload__RAND__) == 'function') tenant_reload__RAND__();
		});
		function tenant_reload__RAND__(){
		<?php if(($AllowUpdate || $AllowInsert) && !$dvprint){ ?>

			jQuery("#tenant-container__RAND__").select2({
				/* initial default value */
				initSelection: function(e, c){
					jQuery.ajax({
						url: 'ajax_combo.php',
						dataType: 'json',
						data: { id: current_tenant__RAND__.value, t: 'residence_and_rental_history', f: 'tenant' }
					}).done(function(resp){
						c({
							id: resp.results[0].id,
							text: resp.results[0].text
						});
						$j('[name="tenant"]').val(resp.results[0].id);
						$j('[id=tenant-container-readonly__RAND__]').html('<span id="tenant-match-text">' + resp.results[0].text + '</span>');
						if(resp.results[0].id == '<?php echo empty_lookup_value; ?>'){ $j('.btn[id=applicants_and_tenants_view_parent]').hide(); }else{ $j('.btn[id=applicants_and_tenants_view_parent]').show(); }


						if(typeof(tenant_update_autofills__RAND__) == 'function') tenant_update_autofills__RAND__();
					});
				},
				width: ($j('fieldset .col-xs-11').width() - 99) + 'px',
				formatNoMatches: function(term){ return '<?php echo addslashes($Translation['No matches found!']); ?>'; },
				minimumResultsForSearch: 10,
				loadMorePadding: 200,
				ajax: {
					url: 'ajax_combo.php',
					dataType: 'json',
					cache: true,
					data: function(term, page){ return { s: term, p: page, t: 'residence_and_rental_history', f: 'tenant' }; },
					results: function(resp, page){ return resp; }
				}
			}).on('change', function(e){
				current_tenant__RAND__.value = e.added.id;
				current_tenant__RAND__.text = e.added.text;
				$j('[name="tenant"]').val(e.added.id);
				if(e.added.id == '<?php echo empty_lookup_value; ?>'){ $j('.btn[id=applicants_and_tenants_view_parent]').hide(); }else{ $j('.btn[id=applicants_and_tenants_view_parent]').show(); }


				if(typeof(tenant_update_autofills__RAND__) == 'function') tenant_update_autofills__RAND__();
			});

			if(!$j("#tenant-container__RAND__").length){
				$j.ajax({
					url: 'ajax_combo.php',
					dataType: 'json',
					data: { id: current_tenant__RAND__.value, t: 'residence_and_rental_history', f: 'tenant' }
				}).done(function(resp){
					$j('[name="tenant"]').val(resp.results[0].id);
					$j('[id=tenant-container-readonly__RAND__]').html('<span id="tenant-match-text">' + resp.results[0].text + '</span>');
					if(resp.results[0].id == '<?php echo empty_lookup_value; ?>'){ $j('.btn[id=applicants_and_tenants_view_parent]').hide(); }else{ $j('.btn[id=applicants_and_tenants_view_parent]').show(); }

					if(typeof(tenant_update_autofills__RAND__) == 'function') tenant_update_autofills__RAND__();
				});
			}

		<?php }else{ ?>

			$j.ajax({
				url: 'ajax_combo.php',
				dataType: 'json',
				data: { id: current_tenant__RAND__.value, t: 'residence_and_rental_history', f: 'tenant' }
			}).done(function(resp){
				$j('[id=tenant-container__RAND__], [id=tenant-container-readonly__RAND__]').html('<span id="tenant-match-text">' + resp.results[0].text + '</span>');
				if(resp.results[0].id == '<?php echo empty_lookup_value; ?>'){ $j('.btn[id=applicants_and_tenants_view_parent]').hide(); }else{ $j('.btn[id=applicants_and_tenants_view_parent]').show(); }

				if(typeof(tenant_update_autofills__RAND__) == 'function') tenant_update_autofills__RAND__();
			});
		<?php } ?>

		}
	</script>
	<?php

	$lookups = str_replace('__RAND__', $rnd1, ob_get_contents());
	ob_end_clean();


	// code for template based detail view forms

	// open the detail view template
	if($dvprint){
		$templateCode = @file_get_contents('./templates/residence_and_rental_history_templateDVP.html');
	}else{
		$templateCode = @file_get_contents('./templates/residence_and_rental_history_templateDV.html');
	}

	// process form title
	$templateCode = str_replace('<%%DETAIL_VIEW_TITLE%%>', 'Residence and rental history details', $templateCode);
	$templateCode = str_replace('<%%RND1%%>', $rnd1, $templateCode);
	$templateCode = str_replace('<%%EMBEDDED%%>', ($_REQUEST['Embedded'] ? 'Embedded=1' : ''), $templateCode);
	// process buttons
	if($AllowInsert){
		if(!$selected_id) $templateCode=str_replace('<%%INSERT_BUTTON%%>', '<button type="submit" class="btn btn-success" id="insert" name="insert_x" value="1" onclick="return residence_and_rental_history_validateData();"><i class="glyphicon glyphicon-plus-sign"></i> ' . $Translation['Save New'] . '</button>', $templateCode);
		$templateCode=str_replace('<%%INSERT_BUTTON%%>', '<button type="submit" class="btn btn-default" id="insert" name="insert_x" value="1" onclick="return residence_and_rental_history_validateData();"><i class="glyphicon glyphicon-plus-sign"></i> ' . $Translation['Save As Copy'] . '</button>', $templateCode);
	}else{
		$templateCode=str_replace('<%%INSERT_BUTTON%%>', '', $templateCode);
	}

	// 'Back' button action
	if($_REQUEST['Embedded']){
		$backAction = 'window.parent.jQuery(\'.modal\').modal(\'hide\'); return false;';
	}else{
		$backAction = '$$(\'form\')[0].writeAttribute(\'novalidate\', \'novalidate\'); document.myform.reset(); return true;';
	}

	if($selected_id){
		if(!$_REQUEST['Embedded']) $templateCode=str_replace('<%%DVPRINT_BUTTON%%>', '<button type="submit" class="btn btn-default" id="dvprint" name="dvprint_x" value="1" onclick="$$(\'form\')[0].writeAttribute(\'novalidate\', \'novalidate\'); document.myform.reset(); return true;"><i class="glyphicon glyphicon-print"></i> ' . $Translation['Print Preview'] . '</button>', $templateCode);
		if($AllowUpdate){
			$templateCode=str_replace('<%%UPDATE_BUTTON%%>', '<button type="submit" class="btn btn-success btn-lg" id="update" name="update_x" value="1" onclick="return residence_and_rental_history_validateData();"><i class="glyphicon glyphicon-ok"></i> ' . $Translation['Save Changes'] . '</button>', $templateCode);
		}else{
			$templateCode=str_replace('<%%UPDATE_BUTTON%%>', '', $templateCode);
		}
		if(($arrPerm[4]==1 && $ownerMemberID==getLoggedMemberID()) || ($arrPerm[4]==2 && $ownerGroupID==getLoggedGroupID()) || $arrPerm[4]==3){ // allow delete?
			$templateCode=str_replace('<%%DELETE_BUTTON%%>', '<button type="submit" class="btn btn-danger" id="delete" name="delete_x" value="1" onclick="return confirm(\'' . $Translation['are you sure?'] . '\');"><i class="glyphicon glyphicon-trash"></i> ' . $Translation['Delete'] . '</button>', $templateCode);
		}else{
			$templateCode=str_replace('<%%DELETE_BUTTON%%>', '', $templateCode);
		}
		$templateCode=str_replace('<%%DESELECT_BUTTON%%>', '<button type="submit" class="btn btn-default" id="deselect" name="deselect_x" value="1" onclick="' . $backAction . '"><i class="glyphicon glyphicon-chevron-left"></i> ' . $Translation['Back'] . '</button>', $templateCode);
	}else{
		$templateCode=str_replace('<%%UPDATE_BUTTON%%>', '', $templateCode);
		$templateCode=str_replace('<%%DELETE_BUTTON%%>', '', $templateCode);
		$templateCode=str_replace('<%%DESELECT_BUTTON%%>', ($ShowCancel ? '<button type="submit" class="btn btn-default" id="deselect" name="deselect_x" value="1" onclick="' . $backAction . '"><i class="glyphicon glyphicon-chevron-left"></i> ' . $Translation['Back'] . '</button>' : ''), $templateCode);
	}

	// set records to read only if user can't insert new records and can't edit current record
	if(($selected_id && !$AllowUpdate && !$AllowInsert) || (!$selected_id && !$AllowInsert)){
		$jsReadOnly .= "\tjQuery('#month').prop('readonly', true);\n";
		$jsReadOnly .= "\tjQuery('#monthDay, #monthMonth, #monthYear').prop('disabled', true).css({ color: '#555', backgroundColor: '#fff' });\n";
		$jsReadOnly .= "\tjQuery('#unit').replaceWith('<div class=\"form-control-static\" id=\"unit\">' + (jQuery('#unit').val() || '') + '</div>');\n";
		$jsReadOnly .= "\tjQuery('#monthly_rent').replaceWith('<div class=\"form-control-static\" id=\"monthly_rent\">' + (jQuery('#monthly_rent').val() || '') + '</div>');\n";
		$jsReadOnly .= "\tjQuery('#security_deposit').replaceWith('<div class=\"form-control-static\" id=\"security_deposit\">' + (jQuery('#security_deposit').val() || '') + '</div>');\n";
		$jsReadOnly .= "\tjQuery('#other_charges').replaceWith('<div class=\"form-control-static\" id=\"other_charges\">' + (jQuery('#other_charges').val() || '') + '</div>');\n";
		$jsReadOnly .= "\tjQuery('#rent_paid').replaceWith('<div class=\"form-control-static\" id=\"rent_paid\">' + (jQuery('#rent_paid').val() || '') + '</div>');\n";
		$jsReadOnly .= "\tjQuery('#rent_balance').replaceWith('<div class=\"form-control-static\" id=\"rent_balance\">' + (jQuery('#rent_balance').val() || '') + '</div>');\n";
		$jsReadOnly .= "\tjQuery('#due_date').prop('readonly', true);\n";
		$jsReadOnly .= "\tjQuery('#due_dateDay, #due_dateMonth, #due_dateYear').prop('disabled', true).css({ color: '#555', backgroundColor: '#fff' });\n";
		$jsReadOnly .= "\tjQuery('#rent_reminder').prop('readonly', true);\n";
		$jsReadOnly .= "\tjQuery('#rent_reminderDay, #rent_reminderMonth, #rent_reminderYear').prop('disabled', true).css({ color: '#555', backgroundColor: '#fff' });\n";
		$jsReadOnly .= "\tjQuery('#late_rent_reminder').prop('readonly', true);\n";
		$jsReadOnly .= "\tjQuery('#late_rent_reminderDay, #late_rent_reminderMonth, #late_rent_reminderYear').prop('disabled', true).css({ color: '#555', backgroundColor: '#fff' });\n";
		$jsReadOnly .= "\tjQuery('#status').replaceWith('<div class=\"form-control-static\" id=\"status\">' + (jQuery('#status').val() || '') + '</div>');\n";
		$jsReadOnly .= "\tjQuery('#duration_of_residency_from').prop('readonly', true);\n";
		$jsReadOnly .= "\tjQuery('#duration_of_residency_fromDay, #duration_of_residency_fromMonth, #duration_of_residency_fromYear').prop('disabled', true).css({ color: '#555', backgroundColor: '#fff' });\n";
		$jsReadOnly .= "\tjQuery('#to').prop('readonly', true);\n";
		$jsReadOnly .= "\tjQuery('#toDay, #toMonth, #toYear').prop('disabled', true).css({ color: '#555', backgroundColor: '#fff' });\n";
		$jsReadOnly .= "\tjQuery('#reason_for_leaving').replaceWith('<div class=\"form-control-static\" id=\"reason_for_leaving\">' + (jQuery('#reason_for_leaving').val() || '') + '</div>');\n";
		$jsReadOnly .= "\tjQuery('.select2-container').hide();\n";

		$noUploads = true;
	}elseif($AllowInsert){
		$jsEditable .= "\tjQuery('form').eq(0).data('already_changed', true);"; // temporarily disable form change handler
			$jsEditable .= "\tjQuery('form').eq(0).data('already_changed', false);"; // re-enable form change handler
	}

	// process combos
	$templateCode=str_replace('<%%COMBO(tenant)%%>', $combo_tenant->HTML, $templateCode);
	$templateCode=str_replace('<%%COMBOTEXT(tenant)%%>', $combo_tenant->MatchText, $templateCode);
	$templateCode=str_replace('<%%URLCOMBOTEXT(tenant)%%>', urlencode($combo_tenant->MatchText), $templateCode);
	$templateCode=str_replace('<%%COMBO(month)%%>', ($selected_id && !$arrPerm[3] ? '<div class="form-control-static">' . $combo_month->GetHTML(true) . '</div>' : $combo_month->GetHTML()), $templateCode);
	$templateCode=str_replace('<%%COMBOTEXT(month)%%>', $combo_month->GetHTML(true), $templateCode);
	$templateCode=str_replace('<%%COMBO(due_date)%%>', ($selected_id && !$arrPerm[3] ? '<div class="form-control-static">' . $combo_due_date->GetHTML(true) . '</div>' : $combo_due_date->GetHTML()), $templateCode);
	$templateCode=str_replace('<%%COMBOTEXT(due_date)%%>', $combo_due_date->GetHTML(true), $templateCode);
	$templateCode=str_replace('<%%COMBO(rent_reminder)%%>', ($selected_id && !$arrPerm[3] ? '<div class="form-control-static">' . $combo_rent_reminder->GetHTML(true) . '</div>' : $combo_rent_reminder->GetHTML()), $templateCode);
	$templateCode=str_replace('<%%COMBOTEXT(rent_reminder)%%>', $combo_rent_reminder->GetHTML(true), $templateCode);
	$templateCode=str_replace('<%%COMBO(late_rent_reminder)%%>', ($selected_id && !$arrPerm[3] ? '<div class="form-control-static">' . $combo_late_rent_reminder->GetHTML(true) . '</div>' : $combo_late_rent_reminder->GetHTML()), $templateCode);
	$templateCode=str_replace('<%%COMBOTEXT(late_rent_reminder)%%>', $combo_late_rent_reminder->GetHTML(true), $templateCode);
	$templateCode=str_replace('<%%COMBO(duration_of_residency_from)%%>', ($selected_id && !$arrPerm[3] ? '<div class="form-control-static">' . $combo_duration_of_residency_from->GetHTML(true) . '</div>' : $combo_duration_of_residency_from->GetHTML()), $templateCode);
	$templateCode=str_replace('<%%COMBOTEXT(duration_of_residency_from)%%>', $combo_duration_of_residency_from->GetHTML(true), $templateCode);
	$templateCode=str_replace('<%%COMBO(to)%%>', ($selected_id && !$arrPerm[3] ? '<div class="form-control-static">' . $combo_to->GetHTML(true) . '</div>' : $combo_to->GetHTML()), $templateCode);
	$templateCode=str_replace('<%%COMBOTEXT(to)%%>', $combo_to->GetHTML(true), $templateCode);

	/* lookup fields array: 'lookup field name' => array('parent table name', 'lookup field caption') */
	$lookup_fields = array(  'tenant' => array('applicants_and_tenants', 'Tenant'));
	foreach($lookup_fields as $luf => $ptfc){
		$pt_perm = getTablePermissions($ptfc[0]);

		// process foreign key links
		if($pt_perm['view'] || $pt_perm['edit']){
			$templateCode = str_replace("<%%PLINK({$luf})%%>", '<button type="button" class="btn btn-default view_parent hspacer-md" id="' . $ptfc[0] . '_view_parent" title="' . html_attr($Translation['View'] . ' ' . $ptfc[1]) . '"><i class="glyphicon glyphicon-eye-open"></i></button>', $templateCode);
		}

		// if user has insert permission to parent table of a lookup field, put an add new button
		if($pt_perm['insert'] && !$_REQUEST['Embedded']){
			$templateCode = str_replace("<%%ADDNEW({$ptfc[0]})%%>", '<button type="button" class="btn btn-success add_new_parent hspacer-md" id="' . $ptfc[0] . '_add_new" title="' . html_attr($Translation['Add New'] . ' ' . $ptfc[1]) . '"><i class="glyphicon glyphicon-plus-sign"></i></button>', $templateCode);
		}
	}

	// process images
	$templateCode=str_replace('<%%UPLOADFILE(id)%%>', '', $templateCode);
	$templateCode=str_replace('<%%UPLOADFILE(tenant)%%>', '', $templateCode);
	$templateCode=str_replace('<%%UPLOADFILE(month)%%>', '', $templateCode);
	$templateCode=str_replace('<%%UPLOADFILE(unit)%%>', '', $templateCode);
	$templateCode=str_replace('<%%UPLOADFILE(monthly_rent)%%>', '', $templateCode);
	$templateCode=str_replace('<%%UPLOADFILE(security_deposit)%%>', '', $templateCode);
	$templateCode=str_replace('<%%UPLOADFILE(other_charges)%%>', '', $templateCode);
	$templateCode=str_replace('<%%UPLOADFILE(rent_paid)%%>', '', $templateCode);
	$templateCode=str_replace('<%%UPLOADFILE(rent_balance)%%>', '', $templateCode);
	$templateCode=str_replace('<%%UPLOADFILE(due_date)%%>', '', $templateCode);
	$templateCode=str_replace('<%%UPLOADFILE(rent_reminder)%%>', '', $templateCode);
	$templateCode=str_replace('<%%UPLOADFILE(late_rent_reminder)%%>', '', $templateCode);
	$templateCode=str_replace('<%%UPLOADFILE(status)%%>', '', $templateCode);
	$templateCode=str_replace('<%%UPLOADFILE(duration_of_residency_from)%%>', '', $templateCode);
	$templateCode=str_replace('<%%UPLOADFILE(to)%%>', '', $templateCode);
	$templateCode=str_replace('<%%UPLOADFILE(reason_for_leaving)%%>', '', $templateCode);
	$templateCode=str_replace('<%%UPLOADFILE(notes)%%>', '', $templateCode);

	// process values
	if($selected_id){
		$templateCode=str_replace('<%%VALUE(id)%%>', html_attr($row['id']), $templateCode);
		$templateCode=str_replace('<%%URLVALUE(id)%%>', urlencode($urow['id']), $templateCode);
		$templateCode=str_replace('<%%VALUE(tenant)%%>', html_attr($row['tenant']), $templateCode);
		$templateCode=str_replace('<%%URLVALUE(tenant)%%>', urlencode($urow['tenant']), $templateCode);
		$templateCode=str_replace('<%%VALUE(month)%%>', @date('m/d/Y', @strtotime(html_attr($row['month']))), $templateCode);
		$templateCode=str_replace('<%%URLVALUE(month)%%>', urlencode(@date('m/d/Y', @strtotime(html_attr($urow['month'])))), $templateCode);
		$templateCode=str_replace('<%%VALUE(unit)%%>', html_attr($row['unit']), $templateCode);
		$templateCode=str_replace('<%%URLVALUE(unit)%%>', urlencode($urow['unit']), $templateCode);
		$templateCode=str_replace('<%%VALUE(monthly_rent)%%>', html_attr($row['monthly_rent']), $templateCode);
		$templateCode=str_replace('<%%URLVALUE(monthly_rent)%%>', urlencode($urow['monthly_rent']), $templateCode);
		$templateCode=str_replace('<%%VALUE(security_deposit)%%>', html_attr($row['security_deposit']), $templateCode);
		$templateCode=str_replace('<%%URLVALUE(security_deposit)%%>', urlencode($urow['security_deposit']), $templateCode);
		$templateCode=str_replace('<%%VALUE(other_charges)%%>', html_attr($row['other_charges']), $templateCode);
		$templateCode=str_replace('<%%URLVALUE(other_charges)%%>', urlencode($urow['other_charges']), $templateCode);
		$templateCode=str_replace('<%%VALUE(rent_paid)%%>', html_attr($row['rent_paid']), $templateCode);
		$templateCode=str_replace('<%%URLVALUE(rent_paid)%%>', urlencode($urow['rent_paid']), $templateCode);
		$templateCode=str_replace('<%%VALUE(rent_balance)%%>', html_attr($row['rent_balance']), $templateCode);
		$templateCode=str_replace('<%%URLVALUE(rent_balance)%%>', urlencode($urow['rent_balance']), $templateCode);
		$templateCode=str_replace('<%%VALUE(due_date)%%>', @date('m/d/Y', @strtotime(html_attr($row['due_date']))), $templateCode);
		$templateCode=str_replace('<%%URLVALUE(due_date)%%>', urlencode(@date('m/d/Y', @strtotime(html_attr($urow['due_date'])))), $templateCode);
		$templateCode=str_replace('<%%VALUE(rent_reminder)%%>', @date('m/d/Y', @strtotime(html_attr($row['rent_reminder']))), $templateCode);
		$templateCode=str_replace('<%%URLVALUE(rent_reminder)%%>', urlencode(@date('m/d/Y', @strtotime(html_attr($urow['rent_reminder'])))), $templateCode);
		$templateCode=str_replace('<%%VALUE(late_rent_reminder)%%>', @date('m/d/Y', @strtotime(html_attr($row['late_rent_reminder']))), $templateCode);
		$templateCode=str_replace('<%%URLVALUE(late_rent_reminder)%%>', urlencode(@date('m/d/Y', @strtotime(html_attr($urow['late_rent_reminder'])))), $templateCode);
		$templateCode=str_replace('<%%VALUE(status)%%>', html_attr($row['status']), $templateCode);
		$templateCode=str_replace('<%%URLVALUE(status)%%>', urlencode($urow['status']), $templateCode);
		$templateCode=str_replace('<%%VALUE(duration_of_residency_from)%%>', @date('m/d/Y', @strtotime(html_attr($row['duration_of_residency_from']))), $templateCode);
		$templateCode=str_replace('<%%URLVALUE(duration_of_residency_from)%%>', urlencode(@date('m/d/Y', @strtotime(html_attr($urow['duration_of_residency_from'])))), $templateCode);
		$templateCode=str_replace('<%%VALUE(to)%%>', @date('m/d/Y', @strtotime(html_attr($row['to']))), $templateCode);
		$templateCode=str_replace('<%%URLVALUE(to)%%>', urlencode(@date('m/d/Y', @strtotime(html_attr($urow['to'])))), $templateCode);
		$templateCode=str_replace('<%%VALUE(reason_for_leaving)%%>', html_attr($row['reason_for_leaving']), $templateCode);
		$templateCode=str_replace('<%%URLVALUE(reason_for_leaving)%%>', urlencode($urow['reason_for_leaving']), $templateCode);
		if($AllowUpdate || $AllowInsert){
			$templateCode = str_replace('<%%HTMLAREA(notes)%%>', '<textarea name="notes" id="notes" rows="5">' . html_attr($row['notes']) . '</textarea>', $templateCode);
		}else{
			$templateCode = str_replace('<%%HTMLAREA(notes)%%>', '<div id="notes" class="form-control-static">' . $row['notes'] . '</div>', $templateCode);
		}
		$templateCode=str_replace('<%%VALUE(notes)%%>', nl2br($row['notes']), $templateCode);
		$templateCode=str_replace('<%%URLVALUE(notes)%%>', urlencode($urow['notes']), $templateCode);
	}else{
		$templateCode=str_replace('<%%VALUE(id)%%>', '', $templateCode);
		$templateCode=str_replace('<%%URLVALUE(id)%%>', urlencode(''), $templateCode);
		$templateCode=str_replace('<%%VALUE(tenant)%%>', '', $templateCode);
		$templateCode=str_replace('<%%URLVALUE(tenant)%%>', urlencode(''), $templateCode);
		$templateCode=str_replace('<%%VALUE(month)%%>', '1', $templateCode);
		$templateCode=str_replace('<%%URLVALUE(month)%%>', urlencode('1'), $templateCode);
		$templateCode=str_replace('<%%VALUE(unit)%%>', '', $templateCode);
		$templateCode=str_replace('<%%URLVALUE(unit)%%>', urlencode(''), $templateCode);
		$templateCode=str_replace('<%%VALUE(monthly_rent)%%>', '', $templateCode);
		$templateCode=str_replace('<%%URLVALUE(monthly_rent)%%>', urlencode(''), $templateCode);
		$templateCode=str_replace('<%%VALUE(security_deposit)%%>', '', $templateCode);
		$templateCode=str_replace('<%%URLVALUE(security_deposit)%%>', urlencode(''), $templateCode);
		$templateCode=str_replace('<%%VALUE(other_charges)%%>', '', $templateCode);
		$templateCode=str_replace('<%%URLVALUE(other_charges)%%>', urlencode(''), $templateCode);
		$templateCode=str_replace('<%%VALUE(rent_paid)%%>', '0.00', $templateCode);
		$templateCode=str_replace('<%%URLVALUE(rent_paid)%%>', urlencode('0.00'), $templateCode);
		$templateCode=str_replace('<%%VALUE(rent_balance)%%>', '', $templateCode);
		$templateCode=str_replace('<%%URLVALUE(rent_balance)%%>', urlencode(''), $templateCode);
		$templateCode=str_replace('<%%VALUE(due_date)%%>', '', $templateCode);
		$templateCode=str_replace('<%%URLVALUE(due_date)%%>', urlencode(''), $templateCode);
		$templateCode=str_replace('<%%VALUE(rent_reminder)%%>', '1', $templateCode);
		$templateCode=str_replace('<%%URLVALUE(rent_reminder)%%>', urlencode('1'), $templateCode);
		$templateCode=str_replace('<%%VALUE(late_rent_reminder)%%>', '', $templateCode);
		$templateCode=str_replace('<%%URLVALUE(late_rent_reminder)%%>', urlencode(''), $templateCode);
		$templateCode=str_replace('<%%VALUE(status)%%>', 'BALANCE', $templateCode);
		$templateCode=str_replace('<%%URLVALUE(status)%%>', urlencode('BALANCE'), $templateCode);
		$templateCode=str_replace('<%%VALUE(duration_of_residency_from)%%>', '', $templateCode);
		$templateCode=str_replace('<%%URLVALUE(duration_of_residency_from)%%>', urlencode(''), $templateCode);
		$templateCode=str_replace('<%%VALUE(to)%%>', '', $templateCode);
		$templateCode=str_replace('<%%URLVALUE(to)%%>', urlencode(''), $templateCode);
		$templateCode=str_replace('<%%VALUE(reason_for_leaving)%%>', '', $templateCode);
		$templateCode=str_replace('<%%URLVALUE(reason_for_leaving)%%>', urlencode(''), $templateCode);
		$templateCode=str_replace('<%%HTMLAREA(notes)%%>', '<textarea name="notes" id="notes" rows="5"></textarea>', $templateCode);
	}

	// process translations
	foreach($Translation as $symbol=>$trans){
		$templateCode=str_replace("<%%TRANSLATION($symbol)%%>", $trans, $templateCode);
	}

	// clear scrap
	$templateCode=str_replace('<%%', '<!-- ', $templateCode);
	$templateCode=str_replace('%%>', ' -->', $templateCode);

	// hide links to inaccessible tables
	if($_REQUEST['dvprint_x'] == ''){
		$templateCode .= "\n\n<script>\$j(function(){\n";
		$arrTables = getTableList();
		foreach($arrTables as $name => $caption){
			$templateCode .= "\t\$j('#{$name}_link').removeClass('hidden');\n";
			$templateCode .= "\t\$j('#xs_{$name}_link').removeClass('hidden');\n";
		}

		$templateCode .= $jsReadOnly;
		$templateCode .= $jsEditable;

		if(!$selected_id){
		}

		$templateCode.="\n});</script>\n";
	}

	// ajaxed auto-fill fields
	$templateCode .= '<script>';
	$templateCode .= '$j(function() {';


	$templateCode.="});";
	$templateCode.="</script>";
	$templateCode .= $lookups;

	// handle enforced parent values for read-only lookup fields
	if( $_REQUEST['FilterField'][1]=='2' && $_REQUEST['FilterOperator'][1]=='<=>'){
		$templateCode.="\n<input type=hidden name=tenant value=\"" . html_attr((get_magic_quotes_gpc() ? stripslashes($_REQUEST['FilterValue'][1]) : $_REQUEST['FilterValue'][1]))."\">\n";
	}

	// don't include blank images in lightbox gallery
	$templateCode = preg_replace('/blank.gif" data-lightbox=".*?"/', 'blank.gif"', $templateCode);

	// don't display empty email links
	$templateCode=preg_replace('/<a .*?href="mailto:".*?<\/a>/', '', $templateCode);

	// hook: residence_and_rental_history_dv
	if(function_exists('residence_and_rental_history_dv')){
		$args=array();
		residence_and_rental_history_dv(($selected_id ? $selected_id : FALSE), getMemberInfo(), $templateCode, $args);
	}

	return $templateCode;
}
?>